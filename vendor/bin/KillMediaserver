#!/system/bin/sh
INDEX=0
DEFAULT_TIMEOUT_S=30
PROCESS_ALL_STOP=0
MAX_WAITTIME=10

if [ $# -eq 0 ]
then
	timeout_s=$DEFAULT_TIMEOUT_S
elif [ $# -eq 1 ]
then
	timeout_s=$1
else
	echo "0"
	usage
	exit 1
fi
DELAY_INTERVAL_US=500000
MAX_COUNT=$(( timeout_s*1000*1000/DELAY_INTERVAL_US ))

count=0
cameraserveroldPID=`pidof cameraserver`
provideroldPID=`pidof vendor.qti.camera.provider-service_64`

log -p d -t KillMediaserver "KillMediaserver :E"

isWakeUp=`setprop persist.vendor.camera.provider.ready 0`
while [ $count -lt $MAX_COUNT ]
do
	result1=`getprop init.svc.cameraserver`
	result2=`getprop init.svc.vendor.camera-provider`
	if [ $result1 == "running" ] && [ $result2 == "running" ] && [ $PROCESS_ALL_STOP == "0" ]; then
		su -0 stop cameraserver
		result1=`getprop init.svc.cameraserver`
		su -0 stop vendor.camera-provider
		result2=`getprop init.svc.vendor.camera-provider`
		log -p d -t KillMediaserver "Camera provider STOP"
	elif [ $result1 == "running" ] && [ $PROCESS_ALL_STOP == "0" ]; then
		su -0 stop cameraserver
		result1=`getprop init.svc.cameraserver`
		log -p d -t KillMediaserver "Camera provider STOP"
	elif [ $result2 == "running" ] && [ $PROCESS_ALL_STOP == "0" ]; then
		su -0 stop vendor.camera-provider
		result2=`getprop init.svc.vendor.camera-provider`
		log -p d -t KillMediaserver "Camera provider STOP"
	fi

	if [ $result1 == "stopped" ] && [ $result2 == "stopped" ]; then
		su -0 start cameraserver
		su -0 start vendor.camera-provider

		log -p d -t KillMediaserver "PROCESS_ALL_STOP"

		PROCESS_ALL_STOP=1
		sleep 0.2
		result1=`getprop init.svc.cameraserver`
		result2=`getprop init.svc.vendor.camera-provider`
		cameraserverPID=`pidof cameraserver`
		providerPID=`pidof vendor.qti.camera.provider-service_64`
		log -p d -t KillMediaserver "Camera provider START"
	fi

	if [ $result1 == "running" ] && [ $result2 == "running" ] && [ $PROCESS_ALL_STOP == "1" ];then
		log -p d -t KillMediaserver "CameraServer PID ($cameraserveroldPID)->($cameraserverPID) , CameraProvider PID ($provideroldPID)->($providerPID)"

		waitTime=0
		while [ $waitTime -lt $MAX_WAITTIME ]
		do
			isWakeUp=`getprop persist.vendor.camera.provider.ready`
			if [ $waitTime -lt 2 ]; then
				sleep 2
				log -p d -t KillMediaserver "KillMediaserver +2"
				#isWakeUp=`logcat -d |grep --line-buffered "Camera provider Ready"|awk -v pid="$cameraserverPID" 'END {FS=" "} $3 == pid{print $3 pid}'|wc -l `
				waitTime=$(( waitTime + 2 ))
			else
				sleep 1
				log -p d -t KillMediaserver "KillMediaserver +1"
				#isWakeUp=`logcat -d |grep --line-buffered "Camera provider Ready"|awk -v pid="$cameraserverPID" 'END {FS=" "} $3 == pid{print $3 pid}'|wc -l `
				waitTime=$(( waitTime + 1 ))
			fi
			log -p d -t KillMediaserver "Camera provider iswakeup= $isWakeUp, waitTime= $waitTime s"
			if [ $isWakeUp == "1" ]; then
				log -p d -t KillMediaserver "KillMediaserver break"
				break
			fi
		done
		#sleep 1
		echo "1"
		log -p d -t KillMediaserver "KillMediaserver :X"
		exit 0
	fi
	usleep $DELAY_INTERVAL_US
	(( count++ ))
done

echo "0"
exit 0

function usage()
{
	echo "Please input timeout value (seconds)!"
}
